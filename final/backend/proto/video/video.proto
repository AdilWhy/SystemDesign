syntax = "proto3";
package video;

option go_package = "videostreaming/proto/video";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service VideoService {
  // Video Upload and Management
  rpc InitiateUpload(InitiateUploadRequest) returns (InitiateUploadResponse) {}
  rpc CompleteUpload(CompleteUploadRequest) returns (CompleteUploadResponse) {}
  rpc GetVideo(GetVideoRequest) returns (Video) {}
  rpc ListVideos(ListVideosRequest) returns (ListVideosResponse) {}
  rpc DeleteVideo(DeleteVideoRequest) returns (google.protobuf.Empty) {}
  
  // Streaming
  rpc GetStreamKey(GetStreamKeyRequest) returns (StreamKeyResponse) {}
  rpc StartStream(StartStreamRequest) returns (StreamResponse) {}
  rpc EndStream(EndStreamRequest) returns (google.protobuf.Empty) {}
  rpc GetLiveStreams(GetLiveStreamsRequest) returns (GetLiveStreamsResponse) {}
  
  // Transcoding
  rpc GetTranscodingStatus(GetTranscodingStatusRequest) returns (TranscodingStatusResponse) {}
}

// Video data structure
message Video {
  string id = 1;
  string title = 2;
  string description = 3;
  string user_id = 4;
  string thumbnail_url = 5;
  string video_url = 6;
  int64 duration_seconds = 7;
  int64 view_count = 8;
  VideoStatus status = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  repeated string tags = 12;
  VideoVisibility visibility = 13;
  VideoResolution resolution = 14;
}

enum VideoStatus {
  VIDEO_STATUS_UNSPECIFIED = 0;
  VIDEO_STATUS_UPLOADING = 1;
  VIDEO_STATUS_PROCESSING = 2;
  VIDEO_STATUS_READY = 3;
  VIDEO_STATUS_FAILED = 4;
}

enum VideoVisibility {
  VIDEO_VISIBILITY_UNSPECIFIED = 0;
  VIDEO_VISIBILITY_PUBLIC = 1;
  VIDEO_VISIBILITY_PRIVATE = 2;
  VIDEO_VISIBILITY_UNLISTED = 3;
}

enum VideoResolution {
  VIDEO_RESOLUTION_UNSPECIFIED = 0;
  VIDEO_RESOLUTION_240P = 1;
  VIDEO_RESOLUTION_360P = 2;
  VIDEO_RESOLUTION_480P = 3;
  VIDEO_RESOLUTION_720P = 4;
  VIDEO_RESOLUTION_1080P = 5;
  VIDEO_RESOLUTION_1440P = 6;
  VIDEO_RESOLUTION_2160P = 7; // 4K
}

// Upload related messages
message InitiateUploadRequest {
  string title = 1;
  string description = 2;
  string user_id = 3;
  int64 file_size_bytes = 4;
  string content_type = 5;
  VideoVisibility visibility = 6;
  repeated string tags = 7;
}

message InitiateUploadResponse {
  string upload_id = 1;
  string video_id = 2;
  string upload_url = 3;
}

message CompleteUploadRequest {
  string upload_id = 1;
  string video_id = 2;
}

message CompleteUploadResponse {
  string video_id = 1;
  VideoStatus status = 2;
}

// Video retrieval messages
message GetVideoRequest {
  string video_id = 1;
}

message ListVideosRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ListVideosResponse {
  repeated Video videos = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message DeleteVideoRequest {
  string video_id = 1;
  string user_id = 2; // For authorization check
}

// Live streaming messages
message GetStreamKeyRequest {
  string user_id = 1;
}

message StreamKeyResponse {
  string stream_key = 1;
  string rtmp_url = 2;
}

message StartStreamRequest {
  string user_id = 1;
  string stream_key = 2;
  string title = 3;
  string description = 4;
  repeated string tags = 5;
}

message StreamResponse {
  string stream_id = 1;
  string playback_url = 2;
  string stream_key = 3;
}

message EndStreamRequest {
  string stream_id = 1;
  string user_id = 2; // For authorization check
}

message GetLiveStreamsRequest {
  string user_id = 1; // Optional, filter by user
  int32 page_size = 2;
  string page_token = 3;
}

message GetLiveStreamsResponse {
  repeated LiveStream streams = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message LiveStream {
  string stream_id = 1;
  string user_id = 2;
  string title = 3;
  string description = 4;
  string thumbnail_url = 5;
  string playback_url = 6;
  int64 viewer_count = 7;
  google.protobuf.Timestamp started_at = 8;
  repeated string tags = 9;
}

// Transcoding messages
message GetTranscodingStatusRequest {
  string video_id = 1;
}

message TranscodingStatusResponse {
  string video_id = 1;
  TranscodingStatus status = 2;
  repeated TranscodingJob jobs = 3;
  float overall_progress = 4; // 0-100 percentage
}

enum TranscodingStatus {
  TRANSCODING_STATUS_UNSPECIFIED = 0;
  TRANSCODING_STATUS_QUEUED = 1;
  TRANSCODING_STATUS_PROCESSING = 2;
  TRANSCODING_STATUS_COMPLETED = 3;
  TRANSCODING_STATUS_FAILED = 4;
}

message TranscodingJob {
  string job_id = 1;
  VideoResolution resolution = 2;
  TranscodingStatus status = 3;
  float progress = 4; // 0-100 percentage
  string error_message = 5;
}